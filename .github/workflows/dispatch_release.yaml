name: Dispatch release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: Select a release type
        required: true
        type: choice
        options:
          - 'ga'
          - 'rc'

jobs:
  check_releasablility:
    runs-on: ubuntu-latest
    outputs:
      is_releasable: ${{ steps.check_releaseable_differences.outputs.has_diffrences }}
    permissions:
      contents: read
      pull-requests: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Get latest GA release vesion
        id: get_latest_ga_release_version
        run: |
          version=$(gh api /repos/{owner}/{repo}/releases --jq 'first(.[] | select(.prerelease != true) | select(.draft != true)).tag_name')
          echo "value=${version}" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get latest RC release vesion
        id: get_latest_rc_release_version
        run: |
          version=$(gh api /repos/{owner}/{repo}/releases --jq 'first(.[] | select(.prerelease == true) | select(.draft != true)).tag_name')
          echo "value=${version}" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check for releasable differences
        id: check_releaseable_differences
        run: |
          has_diffrences='true'
          diff_between_ga="$(git diff --shortstat ${{ steps.get_latest_ga_release_version.outputs.value }}...)"
          if [ "${{ github.event.inputs.release_type }}" = 'ga' ] && [ -z "${diff_between_ga}"]; then
            echo "::notice::The GA release publication is skipped because there is no difference between the latest GA release."
            has_diffrences='false'
          fi
          diff_between_rc="$(git diff --shortstat ${{ steps.get_latest_rc_release_version.outputs.value }}...)"
          if [ "${{ github.event.inputs.release_type }}" = 'rc' ] && [ -z "${diff_between_ga}" ] && [ -z "${diff_between_rc}" ]; then
            echo "::notice::The RC release publication is skipped because there is no difference between the latest GA release or the latest RC release and HEAD."
            has_diffrences='false'
          fi
          echo "has_diffrences=${has_diffrences}" >> $GITHUB_OUTPUT

  resolve_next_release_vesion:
    needs: check_releasablility
    if: needs.check_releasablility.outputs.is_releasable == 'true'
    runs-on: ubuntu-latest
    outputs:
      next_release_version: ${{ steps.resolve_next_release_version.outputs.value }}
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create or update draft release
        id: create_or_update_draft_release
        uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter.yaml
          prerelease: ${{ github.event.inputs.release_type != 'ga' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Resolve next release vesion
        id: resolve_next_release_version
        run: |
          version_core=$(echo "${{ steps.create_or_update_draft_release.outputs.tag_name }}" | sed -e 's/^\(v[[:digit:]]\+\.[[:digit:]]\+\.[[:digit:]]\+\).*$/\1/')
          dot_separated_pre_release_identifiers=''
          if [ "${{ github.event.inputs.release_type }}" = 'rc' ]; then
            dot_separated_pre_release_identifiers="-rc.$(( $(echo "${{ steps.create_or_update_draft_release.outputs.tag_name }}" | sed -e 's/^v[[:digit:]]\+\.[[:digit:]]\+\.[[:digit:]]\+-\?[^\.]*\.\?\(.*\)$/\1/') + 1 ))"
          fi
          echo "value=${version_core}${dot_separated_pre_release_identifiers}" >> $GITHUB_OUTPUT

  update_gem_version:
    needs: resolve_next_release_vesion
    uses: ./.github/workflows/_update_gem_version.yaml
    permissions:
      contents: write
      pull-requests: write
    with:
      version: ${{ needs.resolve_next_release_vesion.outputs.next_release_version }}
      gemspec_path: sandbox.gemspec
    secrets:
      pr_approvable_token: ${{ secrets.TEST }}

  publish_latest_draft_release:
    needs: 
      - update_gem_version
      - resolve_next_release_vesion
    uses: ./.github/workflows/_publish_latest_draft_release.yaml
    permissions:
      contents: write
      pull-requests: write
    with:
      prerelease: ${{ github.event.inputs.release_type != 'ga' }}
      version: v${{ needs.resolve_next_release_vesion.outputs.next_release_version }}

  publish_gem:
    needs: publish_latest_draft_release
    uses: ./.github/workflows/_publish_gem.yaml
    permissions:
      contents: read
      packages: write
    with:
      repository_tag: ${{ needs.publish_latest_draft_release.outputs.published_tag }}
      gemspec_path: sandbox.gemspec
