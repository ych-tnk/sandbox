name: Publish gem

on:
  workflow_call:
    inputs:
      repository_tag:
        description: A tag of the repository to checkout.
        required: true
        type: string
      gemspec_path:
        description: A path of the gemspec.
        required: true
        type: string

jobs:
  publish_gem:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.repository_tag }}

      - name: Setup ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'

      - name: Configure gem credentials
        run: |
          mkdir -p ~/.gem
          touch ~/.gem/credentials
          chmod 600 ~/.gem/credentials
          echo -e "---\n:github: Bearer ${{ secrets.GITHUB_TOKEN }}" > ~/.gem/credentials

      - name: Get gem name
        id: get_gem_name
        run: echo "value=$(sed -n -e "s/[[:blank:]]*.*\.\?[^_]name[[:blank:]]*=[[:blank:]]*['\"]\(.*\)['\"].*/\1/ip" ${{ inputs.gemspec_path }})" >> $GITHUB_OUTPUT

      - name: Get gem version
        id: get_gem_version
        run: echo "value=$(sed -n -e "s/[[:blank:]]*.*\.\?[^_]version[[:blank:]]*=[[:blank:]]*['\"]\(.*\)['\"].*/\1/ip" ${{ inputs.gemspec_path }})" >> $GITHUB_OUTPUT

      - name: Get published falg
        id: get_published_flag
        run: |
          ret=$(
          gem search \
          --quiet \
          --remote \
          --exact \
          --clear-sources \
          --source https://x-access-token:${{ secrets.GITHUB_TOKEN }}@rubygems.pkg.github.com/ych-tnk \
          --version ${{ steps.get_gem_version.outputs.value }} \
          sandbox
          )
          echo "value=$(test "${ret}" == '' && echo 'true' || echo 'false')" >> $GITHUB_OUTPUT

      - name: Build and push gem
        if: steps.get_published_flag.outputs.value == 'false'
        run: |
          gem build ${{ inputs.gemspec_path }}
          gem push --key github --host https://rubygems.pkg.github.com/ych-tnk ${{ steps.get_gem_name.outputs.value }}-${{ steps.get_gem_version.outputs.value }}.gem
